/**
 * ========================================
 * –ú–û–î–£–õ–¨: –ì–ï–ù–ï–†–ê–¶–ò–Ø –ê–ù–ö–û–†–û–í –î–õ–Ø –ü–õ–ò–¢–û–ö –¢–ï–ì–û–í
 * ========================================
 *
 * –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –∞–Ω–∫–æ—Ä—ã –¥–ª—è –≤–µ—Ä—Ö–Ω–µ–π –∏ –Ω–∏–∂–Ω–µ–π –ø–ª–∏—Ç–∫–∏ —Ç–µ–≥–æ–≤
 * –∏—Å–ø–æ–ª—å–∑—É—è AI (Gemini)
 */

/**
 * –ü–æ–ª—É—á–∞–µ—Ç –¥–æ—á–µ—Ä–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –¥–ª—è —Ç–µ–∫—É—â–µ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
 * @param {number} categoryId - ID —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
 * @returns {Array<Object>} –ú–∞—Å—Å–∏–≤ –¥–æ—á–µ—Ä–Ω–∏—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π
 */
function getChildCategories(categoryId) {
  try {
    const ss = SpreadsheetApp.getActiveSpreadsheet();
    const sheet = ss.getSheetByName(CATEGORY_SHEETS.MAIN_LIST);

    if (!sheet) {
      throw new Error('–õ–∏—Å—Ç –∫–∞—Ç–µ–≥–æ—Ä–∏–π –Ω–µ –Ω–∞–π–¥–µ–Ω');
    }

    const data = sheet.getDataRange().getValues();
    const children = [];

    // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫
    for (let i = 1; i < data.length; i++) {
      const row = data[i];
      const parentId = row[MAIN_LIST_COLUMNS.PARENT_ID - 1];

      if (parentId == categoryId) {
        children.push({
          id: row[MAIN_LIST_COLUMNS.CATEGORY_ID - 1],
          title: String(row[MAIN_LIST_COLUMNS.TITLE - 1]).replace(/[\s‚îî‚îÄ]/g, '').trim(),
          url: row[MAIN_LIST_COLUMNS.URL - 1],
          level: row[MAIN_LIST_COLUMNS.LEVEL - 1],
          path: row[MAIN_LIST_COLUMNS.HIERARCHY_PATH - 1]
        });
      }
    }

    console.log('[INFO] –ù–∞–π–¥–µ–Ω–æ –¥–æ—á–µ—Ä–Ω–∏—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π:', children.length);

    return children;

  } catch (error) {
    console.error('[ERROR] –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–æ—á–µ—Ä–Ω–∏—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π:', error.message);
    return [];
  }
}

/**
 * –ü–æ–ª—É—á–∞–µ—Ç –≤—Å–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –º–∞–≥–∞–∑–∏–Ω–∞ –¥–ª—è –º–∞–ø–ø–∏–Ω–≥–∞
 * @returns {Array<Object>} –ú–∞—Å—Å–∏–≤ –≤—Å–µ—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π
 */
function getAllCategoriesForMapping() {
  try {
    const ss = SpreadsheetApp.getActiveSpreadsheet();
    const sheet = ss.getSheetByName(CATEGORY_SHEETS.MAIN_LIST);

    if (!sheet) {
      throw new Error('–õ–∏—Å—Ç –∫–∞—Ç–µ–≥–æ—Ä–∏–π –Ω–µ –Ω–∞–π–¥–µ–Ω');
    }

    const data = sheet.getDataRange().getValues();
    const categories = [];

    for (let i = 1; i < data.length; i++) {
      const row = data[i];
      categories.push({
        id: row[MAIN_LIST_COLUMNS.CATEGORY_ID - 1],
        title: String(row[MAIN_LIST_COLUMNS.TITLE - 1]).replace(/[\s‚îî‚îÄ]/g, '').trim(),
        url: row[MAIN_LIST_COLUMNS.URL - 1],
        path: row[MAIN_LIST_COLUMNS.HIERARCHY_PATH - 1]
      });
    }

    return categories;

  } catch (error) {
    console.error('[ERROR] –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–π:', error.message);
    return [];
  }
}

/**
 * –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –∞–Ω–∫–æ—Ä—ã –¥–ª—è –í–ï–†–•–ù–ï–ô –ø–ª–∏—Ç–∫–∏ (–Ω–∞–≤–∏–≥–∞—Ü–∏—è –ø–æ –¥–æ—á–µ—Ä–Ω–∏–º –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º)
 * @param {number} categoryId - ID –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
 * @param {Object} densityAnalysis - –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –∞–Ω–∞–ª–∏–∑–∞ –ø–ª–æ—Ç–Ω–æ—Å—Ç–∏
 * @returns {Array<Object>} –ú–∞—Å—Å–∏–≤ –∞–Ω–∫–æ—Ä–æ–≤
 */
function generateTopTileAnchors(categoryId, densityAnalysis) {
  const context = `–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∞–Ω–∫–æ—Ä–æ–≤ –≤–µ—Ä—Ö–Ω–µ–π –ø–ª–∏—Ç–∫–∏ –¥–ª—è ${categoryId}`;

  try {
    console.log('[INFO] üé® –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∞–Ω–∫–æ—Ä—ã –¥–ª—è –≤–µ—Ä—Ö–Ω–µ–π –ø–ª–∏—Ç–∫–∏ (–Ω–∞–≤–∏–≥–∞—Ü–∏—è)');

    // 1. –ü–æ–ª—É—á–∞–µ–º –¥–æ—á–µ—Ä–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    const children = getChildCategories(categoryId);

    if (children.length === 0) {
      console.log('[INFO] ‚ö†Ô∏è –£ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –Ω–µ—Ç –¥–æ—á–µ—Ä–Ω–∏—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π, –≤–µ—Ä—Ö–Ω—è—è –ø–ª–∏—Ç–∫–∞ –Ω–µ –Ω—É–∂–Ω–∞');
      return [];
    }

    console.log('[INFO] –î–æ—á–µ—Ä–Ω–∏—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π:', children.length);

    // 2. –ü–æ–ª—É—á–∞–µ–º –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ —Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–∫–æ–º
    const deficitKeywords = densityAnalysis.results
      .filter(r => r.status === '‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ')
      .map(r => r.keyword)
      .slice(0, 10); // –ë–µ—Ä–µ–º —Ç–æ–ø-10

    // 3. –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è AI
    const categoryData = {
      id: densityAnalysis.categoryId,
      name: densityAnalysis.categoryName,
      childCategories: children
    };

    // 4. –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –ø—Ä–æ–º–ø—Ç –¥–ª—è AI
    const prompt = buildTopTilePrompt(categoryData, deficitKeywords);

    // 5. –í—ã–∑—ã–≤–∞–µ–º AI API
    console.log('[INFO] –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –≤ AI...');
    const aiResponse = callAIForGeneration(prompt);

    // 6. –ü–∞—Ä—Å–∏–º –æ—Ç–≤–µ—Ç
    const anchors = parseAIResponse(aiResponse);

    // 7. –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ
    const limit = TAG_TILES_CONFIG.TOP_TILE_LIMIT.max;
    const limitedAnchors = anchors.slice(0, limit);

    console.log('[INFO] ‚úÖ –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ –∞–Ω–∫–æ—Ä–æ–≤ –¥–ª—è –≤–µ—Ä—Ö–Ω–µ–π –ø–ª–∏—Ç–∫–∏:', limitedAnchors.length);

    return limitedAnchors;

  } catch (error) {
    console.error('[ERROR] –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∞–Ω–∫–æ—Ä–æ–≤ –≤–µ—Ä—Ö–Ω–µ–π –ø–ª–∏—Ç–∫–∏:', error.message);
    throw error;
  }
}

/**
 * –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –∞–Ω–∫–æ—Ä—ã –¥–ª—è –ù–ò–ñ–ù–ï–ô –ø–ª–∏—Ç–∫–∏ (SEO, –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞)
 * @param {number} categoryId - ID –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
 * @param {Object} densityAnalysis - –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –∞–Ω–∞–ª–∏–∑–∞ –ø–ª–æ—Ç–Ω–æ—Å—Ç–∏
 * @returns {Array<Object>} –ú–∞—Å—Å–∏–≤ –∞–Ω–∫–æ—Ä–æ–≤
 */
function generateBottomTileAnchors(categoryId, densityAnalysis) {
  const context = `–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∞–Ω–∫–æ—Ä–æ–≤ –Ω–∏–∂–Ω–µ–π –ø–ª–∏—Ç–∫–∏ –¥–ª—è ${categoryId}`;

  try {
    console.log('[INFO] üé® –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∞–Ω–∫–æ—Ä—ã –¥–ª—è –Ω–∏–∂–Ω–µ–π –ø–ª–∏—Ç–∫–∏ (SEO)');

    // 1. –ü–æ–ª—É—á–∞–µ–º –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ —Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–∫–æ–º
    const deficitKeywords = densityAnalysis.results
      .filter(r => r.status === '‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ')
      .sort((a, b) => a.tfPercent - b.tfPercent); // –°–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ –≤–æ–∑—Ä–∞—Å—Ç–∞–Ω–∏—é –ø–ª–æ—Ç–Ω–æ—Å—Ç–∏

    console.log('[INFO] –ö–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤ —Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–∫–æ–º:', deficitKeywords.length);

    if (deficitKeywords.length === 0) {
      console.log('[INFO] ‚úÖ –í—Å–µ –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ –∏–º–µ—é—Ç –¥–æ—Å—Ç–∞—Ç–æ—á–Ω—É—é –ø–ª–æ—Ç–Ω–æ—Å—Ç—å');
      return [];
    }

    // 2. –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –¥–ª—è –º–∞–ø–ø–∏–Ω–≥–∞
    const allCategories = getAllCategoriesForMapping();

    // 3. –ü–æ–ª—É—á–∞–µ–º —Ñ—Ä–∞–≥–º–µ–Ω—Ç —Ç–µ–∫—É—â–µ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
    const contentFragment = densityAnalysis.contentData ?
      (densityAnalysis.contentData.description || '').substring(0, 500) : '';

    // 4. –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è AI
    const categoryData = {
      id: densityAnalysis.categoryId,
      name: densityAnalysis.categoryName,
      path: densityAnalysis.contentData.path || '–ö–æ—Ä–Ω–µ–≤–∞—è',
      deficitKeywords: deficitKeywords.slice(0, 20), // –¢–æ–ø-20
      currentContent: contentFragment,
      availableCategories: allCategories.slice(0, 50) // –¢–æ–ø-50 –¥–ª—è –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
    };

    // 5. –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –ø—Ä–æ–º–ø—Ç –¥–ª—è AI
    const prompt = buildBottomTilePrompt(categoryData);

    // 6. –í—ã–∑—ã–≤–∞–µ–º AI API
    console.log('[INFO] –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –≤ AI...');
    const aiResponse = callAIForGeneration(prompt);

    // 7. –ü–∞—Ä—Å–∏–º –æ—Ç–≤–µ—Ç
    const anchors = parseAIResponse(aiResponse);

    // 8. –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ
    const limit = TAG_TILES_CONFIG.BOTTOM_TILE_LIMIT.max;
    const limitedAnchors = anchors.slice(0, limit);

    console.log('[INFO] ‚úÖ –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ –∞–Ω–∫–æ—Ä–æ–≤ –¥–ª—è –Ω–∏–∂–Ω–µ–π –ø–ª–∏—Ç–∫–∏:', limitedAnchors.length);

    return limitedAnchors;

  } catch (error) {
    console.error('[ERROR] –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∞–Ω–∫–æ—Ä–æ–≤ –Ω–∏–∂–Ω–µ–π –ø–ª–∏—Ç–∫–∏:', error.message);
    throw error;
  }
}

/**
 * –°—Ç—Ä–æ–∏—Ç –ø—Ä–æ–º–ø—Ç –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∞–Ω–∫–æ—Ä–æ–≤ –≤–µ—Ä—Ö–Ω–µ–π –ø–ª–∏—Ç–∫–∏
 * @param {Object} categoryData - –î–∞–Ω–Ω—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
 * @param {Array<string>} deficitKeywords - –ö–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ —Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–∫–æ–º
 * @returns {string} –ü—Ä–æ–º–ø—Ç –¥–ª—è AI
 */
function buildTopTilePrompt(categoryData, deficitKeywords) {
  const childList = categoryData.childCategories
    .map(c => `- ${c.title} (ID: ${c.id}, URL: ${c.url})`)
    .join('\n');

  const keywordsList = deficitKeywords.length > 0 ?
    deficitKeywords.join(', ') : '–Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö';

  return `–¢—ã - —ç–∫—Å–ø–µ—Ä—Ç –ø–æ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-–º–∞–≥–∞–∑–∏–Ω–æ–≤ –∏ SEO.

–ó–ê–î–ê–ß–ê: –°–æ–∑–¥–∞—Ç—å 5-8 –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö –∞–Ω–∫–æ—Ä–æ–≤ –¥–ª—è –í–ï–†–•–ù–ï–ô –ø–ª–∏—Ç–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏.

–ö–û–ù–¢–ï–ö–°–¢:
–ö–∞—Ç–µ–≥–æ—Ä–∏—è: "${categoryData.name}"
ID: ${categoryData.id}

–î–û–ß–ï–†–ù–ò–ï –ü–û–î–ö–ê–¢–ï–ì–û–†–ò–ò:
${childList}

–ö–õ–Æ–ß–ï–í–´–ï –°–õ–û–í–ê –° –ù–ï–î–û–°–¢–ê–¢–û–ß–ù–û–ô –ü–õ–û–¢–ù–û–°–¢–¨–Æ:
${keywordsList}

–¢–†–ï–ë–û–í–ê–ù–ò–Ø:
1. –ê–Ω–∫–æ—Ä –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –ø–æ–Ω—è—Ç–Ω—ã–º –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (2-4 —Å–ª–æ–≤–∞)
2. –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω–æ, –≥–¥–µ —ç—Ç–æ —É–º–µ—Å—Ç–Ω–æ
3. –ö–∞–∂–¥—ã–π –∞–Ω–∫–æ—Ä - —Å—Å—ã–ª–∫–∞ –Ω–∞ –û–î–ù–£ –∏–∑ –¥–æ—á–µ—Ä–Ω–∏—Ö –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–π
4. –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç: —É–¥–æ–±—Å—Ç–≤–æ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ > SEO
5. –ù–µ –±–æ–ª–µ–µ 8 –∞–Ω–∫–æ—Ä–æ–≤ (–ª—É—á—à–µ 5-6)
6. –ù–µ –∏–∑–æ–±—Ä–µ—Ç–∞–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ - –∏—Å–ø–æ–ª—å–∑—É–π –¢–û–õ–¨–ö–û —Ç–µ, —á—Ç–æ –≤ —Å–ø–∏—Å–∫–µ

–§–û–†–ú–ê–¢ –û–¢–í–ï–¢–ê (—Å—Ç—Ä–æ–≥–æ JSON):
\`\`\`json
[
  {
    "anchor": "–¢–µ–∫—Å—Ç –∞–Ω–∫–æ—Ä–∞",
    "category_id": 12345,
    "category_name": "–ù–∞–∑–≤–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏",
    "keywords_used": ["–∫–ª—é—á–µ–≤–∏–∫1", "–∫–ª—é—á–µ–≤–∏–∫2"],
    "reasoning": "–ö—Ä–∞—Ç–∫–æ–µ –æ–±—ä—è—Å–Ω–µ–Ω–∏–µ –ø–æ—á–µ–º—É —ç—Ç–æ—Ç –∞–Ω–∫–æ—Ä —Ö–æ—Ä–æ—à"
  }
]
\`\`\`

–í–µ—Ä–Ω–∏ –¢–û–õ–¨–ö–û –≤–∞–ª–∏–¥–Ω—ã–π JSON –º–∞—Å—Å–∏–≤ –±–µ–∑ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞.`;
}

/**
 * –°—Ç—Ä–æ–∏—Ç –ø—Ä–æ–º–ø—Ç –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∞–Ω–∫–æ—Ä–æ–≤ –Ω–∏–∂–Ω–µ–π –ø–ª–∏—Ç–∫–∏
 * @param {Object} categoryData - –î–∞–Ω–Ω—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
 * @returns {string} –ü—Ä–æ–º–ø—Ç –¥–ª—è AI
 */
function buildBottomTilePrompt(categoryData) {
  const deficitList = categoryData.deficitKeywords
    .map(k => `- "${k.keyword}" (TF: ${k.tfPercent}%, —Ü–µ–ª—å: ${k.targetMin}-${k.targetMax}%)`)
    .join('\n');

  const categoriesList = categoryData.availableCategories
    .map(c => `- ${c.title} (ID: ${c.id}, URL: ${c.url})`)
    .join('\n');

  return `–¢—ã - —ç–∫—Å–ø–µ—Ä—Ç –ø–æ SEO-–æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –¥–ª—è –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-–º–∞–≥–∞–∑–∏–Ω–æ–≤.

–ó–ê–î–ê–ß–ê: –°–æ–∑–¥–∞—Ç—å 15-30 –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö –∞–Ω–∫–æ—Ä–æ–≤ –¥–ª—è –ù–ò–ñ–ù–ï–ô –ø–ª–∏—Ç–∫–∏ —Ç–µ–≥–æ–≤ (SEO-–æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è).

–ö–û–ù–¢–ï–ö–°–¢:
–ö–∞—Ç–µ–≥–æ—Ä–∏—è: "${categoryData.name}"
ID: ${categoryData.id}
–ü—É—Ç—å: ${categoryData.path}

–¢–ï–ö–£–©–ò–ô –ö–û–ù–¢–ï–ù–¢ (—Ñ—Ä–∞–≥–º–µ–Ω—Ç):
"${categoryData.currentContent}"

–ö–õ–Æ–ß–ï–í–´–ï –°–õ–û–í–ê –° –ù–ï–î–û–°–¢–ê–¢–û–ß–ù–û–ô –ü–õ–û–¢–ù–û–°–¢–¨–Æ:
${deficitList}

–°–£–©–ï–°–¢–í–£–Æ–©–ò–ï –ö–ê–¢–ï–ì–û–†–ò–ò –ú–ê–ì–ê–ó–ò–ù–ê (–ø—Ä–∏–º–µ—Ä—ã):
${categoriesList}
... –∏ –¥—Ä—É–≥–∏–µ

–¢–†–ï–ë–û–í–ê–ù–ò–Ø:
1. –ê–Ω–∫–æ—Ä –¥–æ–ª–∂–µ–Ω –≤–∫–ª—é—á–∞—Ç—å –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ —Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–∫–æ–º
2. –ó–≤—É—á–∞—Ç—å –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω–æ (2-5 —Å–ª–æ–≤, –Ω–µ —Å–ø–∞–º)
3. –ë—ã—Ç—å –ø–æ–ª–µ–∑–Ω—ã–º –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
4. –ü—Ä–∏–≤—è–∑–∞—Ç—å –∫ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –µ—Å–ª–∏ –æ–Ω–∞ –ø–æ–¥—Ö–æ–¥–∏—Ç
5. –ï—Å–ª–∏ –ø–æ–¥—Ö–æ–¥—è—â–µ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –Ω–µ—Ç - –ø–æ–º–µ—Ç–∏—Ç—å –∫–∞–∫ "CREATE_NEW"
6. –°–æ–∑–¥–∞—Ç—å 15-30 –∞–Ω–∫–æ—Ä–æ–≤ (–ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç —Å–∞–º—ã–º "–¥–µ—Ñ–∏—Ü–∏—Ç–Ω—ã–º" –∫–ª—é—á–µ–≤–∏–∫–∞–º)
7. –ù–µ –ø–æ–≤—Ç–æ—Ä—è—Ç—å –æ–¥–∏–Ω–∞–∫–æ–≤—ã–µ –∞–Ω–∫–æ—Ä—ã

–§–û–†–ú–ê–¢ –û–¢–í–ï–¢–ê (—Å—Ç—Ä–æ–≥–æ JSON):
\`\`\`json
[
  {
    "anchor": "–¢–µ–∫—Å—Ç –∞–Ω–∫–æ—Ä–∞ (2-5 —Å–ª–æ–≤)",
    "keywords_covered": ["–∫–ª—é—á–µ–≤–∏–∫1", "–∫–ª—é—á–µ–≤–∏–∫2"],
    "target_category": {
      "id": 12345,
      "name": "–ù–∞–∑–≤–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏",
      "url": "/collection/url",
      "action": "LINK"
    },
    "reasoning": "–ö—Ä–∞—Ç–∫–æ–µ –æ–±—ä—è—Å–Ω–µ–Ω–∏–µ"
  },
  {
    "anchor": "–î—Ä—É–≥–æ–π –∞–Ω–∫–æ—Ä",
    "keywords_covered": ["–∫–ª—é—á–µ–≤–∏–∫3"],
    "target_category": {
      "id": null,
      "name": "–ù–∞–∑–≤–∞–Ω–∏–µ –Ω–æ–≤–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏",
      "url": "/collection/suggested-url",
      "action": "CREATE_NEW"
    },
    "reasoning": "–ü–æ—á–µ–º—É –Ω—É–∂–Ω–∞ –Ω–æ–≤–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è"
  }
]
\`\`\`

–í–µ—Ä–Ω–∏ –¢–û–õ–¨–ö–û –≤–∞–ª–∏–¥–Ω—ã–π JSON –º–∞—Å—Å–∏–≤ –±–µ–∑ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞.`;
}

/**
 * –í—ã–∑—ã–≤–∞–µ—Ç AI API –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∞–Ω–∫–æ—Ä–æ–≤ (–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç OpenAI, Claude –∏ Gemini)
 * @param {string} prompt - –ü—Ä–æ–º–ø—Ç –¥–ª—è AI
 * @returns {string} –û—Ç–≤–µ—Ç –æ—Ç AI
 */
function callAIForGeneration(prompt) {
  const provider = TAG_TILES_CONFIG.AI_PROVIDER || 'openai';

  if (provider === 'openai') {
    return callOpenAIForGeneration(prompt);
  } else if (provider === 'claude') {
    return callClaudeAPI(prompt);
  } else if (provider === 'gemini') {
    return callGeminiAPI(prompt);
  } else {
    throw new Error(`–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π AI –ø—Ä–æ–≤–∞–π–¥–µ—Ä: ${provider}`);
  }
}

/**
 * –í—ã–∑—ã–≤–∞–µ—Ç OpenAI API –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∞–Ω–∫–æ—Ä–æ–≤
 * –ò—Å–ø–æ–ª—å–∑—É–µ—Ç –Ω–∞—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π –≤ –ø—Ä–æ–µ–∫—Ç–µ getOpenAIConfig()
 * @param {string} prompt - –ü—Ä–æ–º–ø—Ç –¥–ª—è AI
 * @returns {string} –û—Ç–≤–µ—Ç –æ—Ç AI
 */
function callOpenAIForGeneration(prompt) {
  try {
    // –ò—Å–ø–æ–ª—å–∑—É–µ–º —É–∂–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é –∏–∑ –ø—Ä–æ–µ–∫—Ç–∞
    const config = getOpenAIConfig();
    const apiKey = config.apiKey;

    if (!apiKey || apiKey.includes('YOUR_')) {
      throw new Error('OpenAI API –∫–ª—é—á –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω. –î–æ–±–∞–≤—å—Ç–µ OPENAI_API_KEY –≤ Script Properties.');
    }

    const url = 'https://api.openai.com/v1/chat/completions';

    const payload = {
      model: config.model || 'gpt-4o-mini',
      messages: [{
        role: 'system',
        content: '–¢—ã - —ç–∫—Å–ø–µ—Ä—Ç –ø–æ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-–º–∞–≥–∞–∑–∏–Ω–æ–≤ –∏ SEO. –û—Ç–≤–µ—á–∞–π –¢–û–õ–¨–ö–û –≤–∞–ª–∏–¥–Ω—ã–º JSON –±–µ–∑ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞.'
      }, {
        role: 'user',
        content: prompt
      }],
      temperature: TAG_TILES_CONFIG.AI_TEMPERATURE,
      max_tokens: TAG_TILES_CONFIG.AI_MAX_TOKENS
    };

    const options = {
      method: 'POST',
      contentType: 'application/json',
      headers: {
        'Authorization': `Bearer ${apiKey}`
      },
      payload: JSON.stringify(payload),
      muteHttpExceptions: true
    };

    console.log('[INFO] –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –≤ OpenAI API...');

    const response = UrlFetchApp.fetch(url, options);
    const statusCode = response.getResponseCode();

    if (statusCode !== 200) {
      const errorBody = response.getContentText();
      console.error('[ERROR] OpenAI API –æ—Ç–≤–µ—Ç:', errorBody);
      throw new Error(`OpenAI API error: ${statusCode} - ${errorBody}`);
    }

    const result = JSON.parse(response.getContentText());

    if (!result.choices || !result.choices[0] || !result.choices[0].message) {
      throw new Error('–ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –æ—Ç–≤–µ—Ç–∞ –æ—Ç OpenAI API');
    }

    const text = result.choices[0].message.content;

    console.log('[INFO] ‚úÖ –ü–æ–ª—É—á–µ–Ω –æ—Ç–≤–µ—Ç –æ—Ç OpenAI');

    return text;

  } catch (error) {
    console.error('[ERROR] –û—à–∏–±–∫–∞ –≤—ã–∑–æ–≤–∞ OpenAI API:', error.message);
    throw error;
  }
}

/**
 * –í—ã–∑—ã–≤–∞–µ—Ç Claude API –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∞–Ω–∫–æ—Ä–æ–≤
 * @param {string} prompt - –ü—Ä–æ–º–ø—Ç –¥–ª—è AI
 * @returns {string} –û—Ç–≤–µ—Ç –æ—Ç AI
 */
function callClaudeAPI(prompt) {
  try {
    const apiKey = PropertiesService.getScriptProperties().getProperty('CLAUDE_API_KEY');

    if (!apiKey) {
      throw new Error('CLAUDE_API_KEY –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω –≤ Script Properties');
    }

    const url = 'https://api.anthropic.com/v1/messages';

    const payload = {
      model: TAG_TILES_CONFIG.AI_MODEL,
      max_tokens: TAG_TILES_CONFIG.AI_MAX_TOKENS,
      temperature: TAG_TILES_CONFIG.AI_TEMPERATURE,
      messages: [{
        role: 'user',
        content: prompt
      }]
    };

    const options = {
      method: 'POST',
      contentType: 'application/json',
      headers: {
        'x-api-key': apiKey,
        'anthropic-version': '2023-06-01'
      },
      payload: JSON.stringify(payload),
      muteHttpExceptions: true
    };

    console.log('[INFO] –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –≤ Claude API...');

    const response = UrlFetchApp.fetch(url, options);
    const statusCode = response.getResponseCode();

    if (statusCode !== 200) {
      throw new Error(`Claude API error: ${statusCode} - ${response.getContentText()}`);
    }

    const result = JSON.parse(response.getContentText());

    if (!result.content || !result.content[0] || !result.content[0].text) {
      throw new Error('–ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –æ—Ç–≤–µ—Ç–∞ –æ—Ç Claude API');
    }

    const text = result.content[0].text;

    console.log('[INFO] ‚úÖ –ü–æ–ª—É—á–µ–Ω –æ—Ç–≤–µ—Ç –æ—Ç Claude');

    return text;

  } catch (error) {
    console.error('[ERROR] –û—à–∏–±–∫–∞ –≤—ã–∑–æ–≤–∞ Claude API:', error.message);
    throw error;
  }
}

/**
 * –í—ã–∑—ã–≤–∞–µ—Ç Gemini API –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∞–Ω–∫–æ—Ä–æ–≤
 * @param {string} prompt - –ü—Ä–æ–º–ø—Ç –¥–ª—è AI
 * @returns {string} –û—Ç–≤–µ—Ç –æ—Ç AI
 */
function callGeminiAPI(prompt) {
  try {
    const apiKey = PropertiesService.getScriptProperties().getProperty('GEMINI_API_KEY');

    if (!apiKey) {
      throw new Error('GEMINI_API_KEY –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω –≤ Script Properties');
    }

    const url = `https://generativelanguage.googleapis.com/v1/models/${TAG_TILES_CONFIG.AI_MODEL}:generateContent?key=${apiKey}`;

    const payload = {
      contents: [{
        parts: [{
          text: prompt
        }]
      }],
      generationConfig: {
        temperature: TAG_TILES_CONFIG.AI_TEMPERATURE,
        maxOutputTokens: TAG_TILES_CONFIG.AI_MAX_TOKENS,
        topP: 0.95,
        topK: 40
      }
    };

    const options = {
      method: 'POST',
      contentType: 'application/json',
      payload: JSON.stringify(payload),
      muteHttpExceptions: true
    };

    const response = UrlFetchApp.fetch(url, options);
    const statusCode = response.getResponseCode();

    if (statusCode !== 200) {
      throw new Error(`Gemini API error: ${statusCode} - ${response.getContentText()}`);
    }

    const result = JSON.parse(response.getContentText());

    if (!result.candidates || !result.candidates[0] || !result.candidates[0].content) {
      throw new Error('–ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –æ—Ç–≤–µ—Ç–∞ –æ—Ç Gemini API');
    }

    const text = result.candidates[0].content.parts[0].text;

    console.log('[INFO] ‚úÖ –ü–æ–ª—É—á–µ–Ω –æ—Ç–≤–µ—Ç –æ—Ç Gemini');

    return text;

  } catch (error) {
    console.error('[ERROR] –û—à–∏–±–∫–∞ –≤—ã–∑–æ–≤–∞ Gemini API:', error.message);
    throw error;
  }
}

/**
 * –ü–∞—Ä—Å–∏—Ç –æ—Ç–≤–µ—Ç –æ—Ç AI –∏ –∏–∑–≤–ª–µ–∫–∞–µ—Ç JSON
 * @param {string} aiResponse - –¢–µ–∫—Å—Ç–æ–≤—ã–π –æ—Ç–≤–µ—Ç –æ—Ç AI
 * @returns {Array<Object>} –ú–∞—Å—Å–∏–≤ –∞–Ω–∫–æ—Ä–æ–≤
 */
function parseAIResponse(aiResponse) {
  try {
    // –£–±–∏—Ä–∞–µ–º markdown —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –µ—Å–ª–∏ –µ—Å—Ç—å
    let jsonText = aiResponse.trim();

    // –ò–∑–≤–ª–µ–∫–∞–µ–º JSON –∏–∑ markdown –±–ª–æ–∫–∞
    const jsonMatch = jsonText.match(/```json\s*([\s\S]*?)\s*```/);
    if (jsonMatch) {
      jsonText = jsonMatch[1];
    }

    // –£–±–∏—Ä–∞–µ–º –≤–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–µ—Ñ–∏–∫—Å—ã
    jsonText = jsonText.replace(/^[^[\{]*/, '');
    jsonText = jsonText.replace(/[^\]\}]*$/, '');

    // –ü–∞—Ä—Å–∏–º JSON
    const anchors = JSON.parse(jsonText);

    if (!Array.isArray(anchors)) {
      throw new Error('–û—Ç–≤–µ—Ç AI –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –º–∞—Å—Å–∏–≤–æ–º');
    }

    console.log('[INFO] ‚úÖ –†–∞—Å–ø–∞—Ä—Å–µ–Ω–æ –∞–Ω–∫–æ—Ä–æ–≤:', anchors.length);

    return anchors;

  } catch (error) {
    console.error('[ERROR] –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ –æ—Ç–≤–µ—Ç–∞ AI:', error.message);
    console.error('[ERROR] –û—Ç–≤–µ—Ç AI:', aiResponse);
    throw new Error('–ù–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å–ø–∞—Ä—Å–∏—Ç—å –æ—Ç–≤–µ—Ç AI: ' + error.message);
  }
}

/**
 * –ì–õ–ê–í–ù–ê–Ø –§–£–ù–ö–¶–ò–Ø: –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –∞–Ω–∫–æ—Ä—ã –¥–ª—è –æ–±–µ–∏—Ö –ø–ª–∏—Ç–æ–∫
 * @param {number} categoryId - ID –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
 * @returns {Object} –û–±—ä–µ–∫—Ç —Å –∞–Ω–∫–æ—Ä–∞–º–∏ –¥–ª—è –≤–µ—Ä—Ö–Ω–µ–π –∏ –Ω–∏–∂–Ω–µ–π –ø–ª–∏—Ç–∫–∏
 */
function generateTileAnchors(categoryId) {
  try {
    console.log('[INFO] üé® –ù–∞—á–∏–Ω–∞–µ–º –≥–µ–Ω–µ—Ä–∞—Ü–∏—é –∞–Ω–∫–æ—Ä–æ–≤ –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏:', categoryId);

    SpreadsheetApp.getActiveSpreadsheet().toast(
      '–ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∞–Ω–∫–æ—Ä—ã –¥–ª—è –ø–ª–∏—Ç–æ–∫ —Ç–µ–≥–æ–≤...',
      'üé® AI –≥–µ–Ω–µ—Ä–∞—Ü–∏—è',
      -1
    );

    // 1. –°–Ω–∞—á–∞–ª–∞ –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –ø–ª–æ—Ç–Ω–æ—Å—Ç—å
    const densityAnalysis = analyzeKeywordDensity(categoryId, getKeywordsForCategory(categoryId));

    // 2. –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∞–Ω–∫–æ—Ä—ã –¥–ª—è –≤–µ—Ä—Ö–Ω–µ–π –ø–ª–∏—Ç–∫–∏
    console.log('[INFO] === –í–ï–†–•–ù–Ø–Ø –ü–õ–ò–¢–ö–ê (–ù–∞–≤–∏–≥–∞—Ü–∏—è) ===');
    const topAnchors = generateTopTileAnchors(categoryId, densityAnalysis);

    // 3. –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∞–Ω–∫–æ—Ä—ã –¥–ª—è –Ω–∏–∂–Ω–µ–π –ø–ª–∏—Ç–∫–∏
    console.log('[INFO] === –ù–ò–ñ–ù–Ø–Ø –ü–õ–ò–¢–ö–ê (SEO) ===');
    const bottomAnchors = generateBottomTileAnchors(categoryId, densityAnalysis);

    // 4. –§–æ—Ä–º–∏—Ä—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    const result = {
      categoryId: categoryId,
      categoryName: densityAnalysis.categoryName,
      topTile: {
        anchors: topAnchors,
        count: topAnchors.length
      },
      bottomTile: {
        anchors: bottomAnchors,
        count: bottomAnchors.length
      },
      densityAnalysis: densityAnalysis,
      generatedAt: new Date()
    };

    console.log('[INFO] ‚úÖ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞');
    console.log('[INFO] –í–µ—Ä—Ö–Ω—è—è –ø–ª–∏—Ç–∫–∞:', result.topTile.count, '–∞–Ω–∫–æ—Ä–æ–≤');
    console.log('[INFO] –ù–∏–∂–Ω—è—è –ø–ª–∏—Ç–∫–∞:', result.bottomTile.count, '–∞–Ω–∫–æ—Ä–æ–≤');

    SpreadsheetApp.getActiveSpreadsheet().toast(
      `–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ:
–í–µ—Ä—Ö–Ω—è—è –ø–ª–∏—Ç–∫–∞: ${result.topTile.count} –∞–Ω–∫–æ—Ä–æ–≤
–ù–∏–∂–Ω—è—è –ø–ª–∏—Ç–∫–∞: ${result.bottomTile.count} –∞–Ω–∫–æ—Ä–æ–≤`,
      '‚úÖ –ì–æ—Ç–æ–≤–æ',
      10
    );

    return result;

  } catch (error) {
    console.error('[ERROR] –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∞–Ω–∫–æ—Ä–æ–≤:', error.message);

    SpreadsheetApp.getActiveSpreadsheet().toast(
      '–û—à–∏–±–∫–∞: ' + error.message,
      '‚ùå –û—à–∏–±–∫–∞',
      10
    );

    throw error;
  }
}

/**
 * –¢–ï–°–¢–û–í–ê–Ø –§–£–ù–ö–¶–ò–Ø: –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∞–Ω–∫–æ—Ä–æ–≤ –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –ë–∏–Ω–æ–∫–ª–∏
 */
function testGenerateAnchors() {
  const categoryId = 9175197; // –ë–∏–Ω–æ–∫–ª–∏

  const result = generateTileAnchors(categoryId);

  console.log('=== –†–ï–ó–£–õ–¨–¢–ê–¢–´ –ì–ï–ù–ï–†–ê–¶–ò–ò ===');
  console.log('–ö–∞—Ç–µ–≥–æ—Ä–∏—è:', result.categoryName);
  console.log('\n=== –í–ï–†–•–ù–Ø–Ø –ü–õ–ò–¢–ö–ê ===');
  result.topTile.anchors.forEach((a, i) => {
    console.log(`${i+1}. "${a.anchor}" ‚Üí ${a.category_name} (${a.category_id})`);
  });
  console.log('\n=== –ù–ò–ñ–ù–Ø–Ø –ü–õ–ò–¢–ö–ê ===');
  result.bottomTile.anchors.forEach((a, i) => {
    console.log(`${i+1}. "${a.anchor}" ‚Üí ${a.target_category.name} (${a.target_category.action})`);
  });

  return result;
}

/**
 * ========================================
 * –ú–û–î–£–õ–¨: –û–¢–ü–†–ê–í–ö–ê –í INSALES
 * ========================================
 * 
 * –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–π –∫–∞—Ç–µ–≥–æ—Ä–∏–π –≤ InSales
 * —Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π —Ñ–∏–∫—Å–∞—Ü–∏–µ–π –∏–∑–º–µ–Ω–µ–Ω–∏–π –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –ø–æ–∑–∏—Ü–∏–π
 */

/**
 * –û–±–Ω–æ–≤–ª—è–µ—Ç –∫–∞—Ç–µ–≥–æ—Ä–∏—é –≤ InSales —á–µ—Ä–µ–∑ API
 */
function updateCategoryInInSales(categoryId, updateData) {
  const context = `–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ ${categoryId} –≤ InSales`;
  
  try {
    logInfo('üì§ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –≤ InSales API', null, context);
    
    const credentials = getInsalesCredentialsSync();
    if (!credentials) {
      throw new Error('–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —É—á–µ—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ InSales');
    }
    
    const url = `${credentials.baseUrl}${CATEGORY_API_ENDPOINTS.UPDATE_COLLECTION.replace('{id}', categoryId)}`;
    
    // –§–æ—Ä–º–∏—Ä—É–µ–º payload –¥–ª—è InSales API
    const payload = {
      collection: {
        title: updateData.title,
        seo_title: updateData.seo_title,
        seo_description: updateData.seo_description,
        h1_title: updateData.h1_title,
        meta_keywords: updateData.meta_keywords,
        description: updateData.description
      }
    };
    
    const options = {
      method: 'PUT',
      headers: {
        'Authorization': 'Basic ' + Utilities.base64Encode(`${credentials.apiKey}:${credentials.password}`),
        'Content-Type': 'application/json',
        'Accept': 'application/json'
      },
      payload: JSON.stringify(payload),
      muteHttpExceptions: true
    };
    
    logInfo('üì° –û—Ç–ø—Ä–∞–≤–ª—è–µ–º PUT –∑–∞–ø—Ä–æ—Å –∫ InSales API...');
    
    const response = UrlFetchApp.fetch(url, options);
    const responseCode = response.getResponseCode();
    
    if (responseCode === 200 || responseCode === 204) {
      logInfo('‚úÖ –ö–∞—Ç–µ–≥–æ—Ä–∏—è —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∞ –≤ InSales', null, context);
      return true;
    } else {
      const responseText = response.getContentText();
      logError(`‚ùå –û—à–∏–±–∫–∞ API InSales: ${responseCode}`, responseText, context);
      
      // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏ –æ—à–∏–±–∫–∏
      SpreadsheetApp.getUi().alert(
        '–û—à–∏–±–∫–∞ InSales API',
        `–ö–æ–¥ –æ—à–∏–±–∫–∏: ${responseCode}\n\n–û—Ç–≤–µ—Ç API:\n${responseText.substring(0, 500)}`,
        SpreadsheetApp.getUi().ButtonSet.OK
      );
      
      return false;
    }
    
  } catch (error) {
    logError('‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –≤ InSales', error, context);
    return false;
  }
}

/**
 * –û–±–Ω–æ–≤–ª—è–µ—Ç —Å—Ç–∞—Ç—É—Å –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –≤ –≥–ª–∞–≤–Ω–æ–º –ª–∏—Å—Ç–µ
 */
function updateCategoryStatusInMainList(categoryId, seoStatus) {
  const context = "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –≤ –≥–ª–∞–≤–Ω–æ–º –ª–∏—Å—Ç–µ";
  
  try {
    const ss = SpreadsheetApp.getActiveSpreadsheet();
    const sheet = ss.getSheetByName(CATEGORY_SHEETS.MAIN_LIST);
    
    if (!sheet) {
      logWarning('‚ö†Ô∏è –ì–ª–∞–≤–Ω—ã–π –ª–∏—Å—Ç –∫–∞—Ç–µ–≥–æ—Ä–∏–π –Ω–µ –Ω–∞–π–¥–µ–Ω');
      return;
    }
    
    const data = sheet.getDataRange().getValues();
    
    // –ò—â–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏—é –ø–æ ID
    for (let i = 1; i < data.length; i++) {
      if (data[i][MAIN_LIST_COLUMNS.CATEGORY_ID - 1] == categoryId) {
        // –û–±–Ω–æ–≤–ª—è–µ–º SEO —Å—Ç–∞—Ç—É—Å (–∫–æ–ª–æ–Ω–∫–∞ J)
        sheet.getRange(i + 1, MAIN_LIST_COLUMNS.SEO_STATUS).setValue(seoStatus);
        
        // –û–±–Ω–æ–≤–ª—è–µ–º AI —Å—Ç–∞—Ç—É—Å (–∫–æ–ª–æ–Ω–∫–∞ K)
        sheet.getRange(i + 1, MAIN_LIST_COLUMNS.AI_STATUS).setValue('‚úÖ –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ AI');
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞—Ç—É (–∫–æ–ª–æ–Ω–∫–∞ L)
        sheet.getRange(i + 1, MAIN_LIST_COLUMNS.LAST_UPDATED).setValue(new Date());
        
        // –ü–æ–¥—Å–≤–µ—á–∏–≤–∞–µ–º —Å—Ç—Ä–æ–∫—É –∑–µ–ª–µ–Ω—ã–º
        sheet.getRange(i + 1, 1, 1, 13).setBackground('#e8f5e9');
        
        logInfo(`‚úÖ –°—Ç–∞—Ç—É—Å –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ ${categoryId} –æ–±–Ω–æ–≤–ª–µ–Ω –≤ –≥–ª–∞–≤–Ω–æ–º –ª–∏—Å—Ç–µ`, null, context);
        break;
      }
    }
    
  } catch (error) {
    logError('‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏', error, context);
  }
}

/**
 * –ù–û–í–ê–Ø –§–£–ù–ö–¶–ò–Ø: –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Ñ–∏–∫—Å–∏—Ä—É–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏—è –ø–µ—Ä–µ–¥ –æ—Ç–ø—Ä–∞–≤–∫–æ–π
 * –í—ã–∑—ã–≤–∞–µ—Ç—Å—è –∏–∑ sendCategoryChangesToInSales()
 */
function autoLogChangeBeforeSending(categoryData, updateData) {
  const context = "–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —Ñ–∏–∫—Å–∞—Ü–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π";
  
  try {
    const changes = [];
    
    // –°–æ–±–∏—Ä–∞–µ–º —Å–ø–∏—Å–æ–∫ –∏–∑–º–µ–Ω–µ–Ω–∏–π
    if (updateData.seo_title) {
      changes.push(`SEO Title: "${updateData.seo_title}"`);
    }
    
    if (updateData.seo_description) {
      const shortDesc = updateData.seo_description.length > 50 ? 
        updateData.seo_description.substring(0, 50) + '...' : 
        updateData.seo_description;
      changes.push(`Meta Description: "${shortDesc}"`);
    }
    
    if (updateData.h1_title) {
      changes.push(`H1: "${updateData.h1_title}"`);
    }
    
    if (updateData.meta_keywords) {
      changes.push(`Keywords: "${updateData.meta_keywords}"`);
    }
    
    if (updateData.description) {
      changes.push('–û–±–Ω–æ–≤–ª–µ–Ω–æ –ø–æ–ª–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏');
    }
    
    if (changes.length > 0) {
      const changeLog = `üì§ –û—Ç–ø—Ä–∞–≤–∫–∞ –≤ InSales: ${changes.join('; ')}`;
      
      // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –∏—Å—Ç–æ—Ä–∏—é –∏–∑–º–µ–Ω–µ–Ω–∏–π
      logPageChange(categoryData.id, changeLog);
      
      logInfo(`‚úÖ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–æ –∏–∑–º–µ–Ω–µ–Ω–∏–π: ${changes.length}`, null, context);
    } else {
      logWarning('‚ö†Ô∏è –ù–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏–π –¥–ª—è —Ñ–∏–∫—Å–∞—Ü–∏–∏');
    }
    
  } catch (error) {
    logError('‚ùå –û—à–∏–±–∫–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π —Ñ–∏–∫—Å–∞—Ü–∏–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–π', error, context);
    // –ù–µ –ø—Ä–µ—Ä—ã–≤–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å, –ø—Ä–æ—Å—Ç–æ –ª–æ–≥–∏—Ä—É–µ–º –æ—à–∏–±–∫—É
  }
}

/**
 * –û–±–Ω–æ–≤–ª—è–µ—Ç —Ç–æ–ª—å–∫–æ SEO –¥–∞–Ω–Ω—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ (–±—ã—Å—Ç—Ä–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ)
 */
function updateCategorySEOOnly() {
  const context = "–ë—ã—Å—Ç—Ä–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ SEO";
  
  try {
    const categoryData = getActiveCategoryData();
    
    if (!categoryData) {
      SpreadsheetApp.getUi().alert(
        '–û—à–∏–±–∫–∞',
        '–û—Ç–∫—Ä–æ–π—Ç–µ –¥–µ—Ç–∞–ª—å–Ω—ã–π –ª–∏—Å—Ç –∫–∞—Ç–µ–≥–æ—Ä–∏–∏',
        SpreadsheetApp.getUi().ButtonSet.OK
      );
      return;
    }
    
    const ui = SpreadsheetApp.getUi();
    const response = ui.alert(
      '–ë—ã—Å—Ç—Ä–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ SEO',
      '–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Ç–æ–ª—å–∫–æ SEO —Ç–µ–≥–∏ (title, description, H1) –±–µ–∑ –æ–ø–∏—Å–∞–Ω–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏?\n\n–≠—Ç–æ –±—ã—Å—Ç—Ä–µ–µ, —á–µ–º –ø–æ–ª–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ.',
      ui.ButtonSet.YES_NO
    );
    
    if (response !== ui.Button.YES) {
      return;
    }
    
    SpreadsheetApp.getActiveSpreadsheet().toast(
      '–û–±–Ω–æ–≤–ª—è–µ–º SEO —Ç–µ–≥–∏...',
      '‚è≥ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ',
      -1
    );
    
    const sheet = SpreadsheetApp.getActiveSheet();
    
    const updateData = {
      seo_title: sheet.getRange(DETAIL_SHEET_SECTIONS.SEO_TITLE_CELL).getValue(),
      seo_description: sheet.getRange(DETAIL_SHEET_SECTIONS.SEO_DESCRIPTION_CELL).getValue(),
      h1_title: sheet.getRange(DETAIL_SHEET_SECTIONS.SEO_H1_CELL).getValue(),
      meta_keywords: sheet.getRange(DETAIL_SHEET_SECTIONS.SEO_KEYWORDS_CELL).getValue()
    };
    
    // –§–∏–∫—Å–∏—Ä—É–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
    autoLogChangeBeforeSending(categoryData, updateData);
    
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º
    const success = updateCategoryInInSales(categoryData.id, updateData);
    
    if (success) {
      SpreadsheetApp.getActiveSpreadsheet().toast(
        'SEO —Ç–µ–≥–∏ –æ–±–Ω–æ–≤–ª–µ–Ω—ã!',
        '‚úÖ –ì–æ—Ç–æ–≤–æ',
        5
      );
      
      updateCategoryStatusInMainList(categoryData.id, '‚úÖ SEO –æ–±–Ω–æ–≤–ª–µ–Ω–æ');
    } else {
      SpreadsheetApp.getActiveSpreadsheet().toast(
        '–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è',
        '‚ùå –û—à–∏–±–∫–∞',
        10
      );
    }
    
  } catch (error) {
    logError('‚ùå –û—à–∏–±–∫–∞ –±—ã—Å—Ç—Ä–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è SEO', error, context);
    SpreadsheetApp.getUi().alert('–û—à–∏–±–∫–∞: ' + error.message);
  }
}

/**
 * –û–±–Ω–æ–≤–ª—è–µ—Ç —Ç–æ–ª—å–∫–æ –æ–ø–∏—Å–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
 */
function updateCategoryDescriptionOnly() {
  const context = "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ–ø–∏—Å–∞–Ω–∏—è";
  
  try {
    const categoryData = getActiveCategoryData();
    
    if (!categoryData) {
      SpreadsheetApp.getUi().alert(
        '–û—à–∏–±–∫–∞',
        '–û—Ç–∫—Ä–æ–π—Ç–µ –¥–µ—Ç–∞–ª—å–Ω—ã–π –ª–∏—Å—Ç –∫–∞—Ç–µ–≥–æ—Ä–∏–∏',
        SpreadsheetApp.getUi().ButtonSet.OK
      );
      return;
    }
    
    const ui = SpreadsheetApp.getUi();
    const response = ui.alert(
      '–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ–ø–∏—Å–∞–Ω–∏—è',
      '–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Ç–æ–ª—å–∫–æ –æ–ø–∏—Å–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏?',
      ui.ButtonSet.YES_NO
    );
    
    if (response !== ui.Button.YES) {
      return;
    }
    
    SpreadsheetApp.getActiveSpreadsheet().toast(
      '–û–±–Ω–æ–≤–ª—è–µ–º –æ–ø–∏—Å–∞–Ω–∏–µ...',
      '‚è≥ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ',
      -1
    );
    
    const sheet = SpreadsheetApp.getActiveSheet();
    
    const updateData = {
      description: sheet.getRange('B17').getValue()
    };
    
    // –§–∏–∫—Å–∏—Ä—É–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
    autoLogChangeBeforeSending(categoryData, updateData);
    
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º
    const success = updateCategoryInInSales(categoryData.id, updateData);
    
    if (success) {
      SpreadsheetApp.getActiveSpreadsheet().toast(
        '–û–ø–∏—Å–∞–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–æ!',
        '‚úÖ –ì–æ—Ç–æ–≤–æ',
        5
      );
      
      logPageChange(categoryData.id, '–û–±–Ω–æ–≤–ª–µ–Ω–æ –æ–ø–∏—Å–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —á–µ—Ä–µ–∑ InSales API');
    } else {
      SpreadsheetApp.getActiveSpreadsheet().toast(
        '–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è',
        '‚ùå –û—à–∏–±–∫–∞',
        10
      );
    }
    
  } catch (error) {
    logError('‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –æ–ø–∏—Å–∞–Ω–∏—è', error, context);
    SpreadsheetApp.getUi().alert('–û—à–∏–±–∫–∞: ' + error.message);
  }
}

/**
 * –ú–∞—Å—Å–æ–≤–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–π –∏–∑ –≥–ª–∞–≤–Ω–æ–≥–æ –ª–∏—Å—Ç–∞
 */
function bulkUpdateSelectedCategories() {
  const context = "–ú–∞—Å—Å–æ–≤–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ";
  
  try {
    const ss = SpreadsheetApp.getActiveSpreadsheet();
    const sheet = ss.getSheetByName(CATEGORY_SHEETS.MAIN_LIST);
    
    if (!sheet) {
      SpreadsheetApp.getUi().alert(
        '–û—à–∏–±–∫–∞',
        '–ì–ª–∞–≤–Ω—ã–π –ª–∏—Å—Ç –∫–∞—Ç–µ–≥–æ—Ä–∏–π –Ω–µ –Ω–∞–π–¥–µ–Ω',
        SpreadsheetApp.getUi().ButtonSet.OK
      );
      return;
    }
    
    const data = sheet.getDataRange().getValues();
    const selectedCategories = [];
    
    // –°–æ–±–∏—Ä–∞–µ–º –æ—Ç–º–µ—á–µ–Ω–Ω—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    for (let i = 2; i < data.length; i++) { // –ù–∞—á–∏–Ω–∞–µ–º —Å 3-–π —Å—Ç—Ä–æ–∫–∏ (–¥–∞–Ω–Ω—ã–µ)
      const checkbox = data[i][0];
      if (checkbox === true) {
        selectedCategories.push({
          row: i + 1,
          id: data[i][MAIN_LIST_COLUMNS.CATEGORY_ID - 1],
          title: data[i][MAIN_LIST_COLUMNS.TITLE - 1]
        });
      }
    }
    
    if (selectedCategories.length === 0) {
      SpreadsheetApp.getUi().alert(
        '–ù–µ—Ç –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π',
        '–û—Ç–º–µ—Ç—å—Ç–µ —á–µ–∫–±–æ–∫—Å–∞–º–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏, –∫–æ—Ç–æ—Ä—ã–µ –Ω—É–∂–Ω–æ –æ–±–Ω–æ–≤–∏—Ç—å',
        SpreadsheetApp.getUi().ButtonSet.OK
      );
      return;
    }
    
    const ui = SpreadsheetApp.getUi();
    const response = ui.alert(
      '–ú–∞—Å—Å–æ–≤–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ',
      `–û–±–Ω–æ–≤–∏—Ç—å ${selectedCategories.length} –∫–∞—Ç–µ–≥–æ—Ä–∏–π –≤ InSales?\n\n` +
      '–ë—É–¥—É—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ –∏–∑ –¥–µ—Ç–∞–ª—å–Ω—ã—Ö –ª–∏—Å—Ç–æ–≤ –∫–∞–∂–¥–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏.',
      ui.ButtonSet.YES_NO
    );
    
    if (response !== ui.Button.YES) {
      return;
    }
    
    // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    let successCount = 0;
    let errorCount = 0;
    
    for (let i = 0; i < selectedCategories.length; i++) {
      const cat = selectedCategories[i];
      
      SpreadsheetApp.getActiveSpreadsheet().toast(
        `–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ ${i + 1}/${selectedCategories.length}: ${cat.title}`,
        '‚è≥ –û–±—Ä–∞–±–æ—Ç–∫–∞',
        -1
      );
      
      try {
        // –û—Ç–∫—Ä—ã–≤–∞–µ–º –¥–µ—Ç–∞–ª—å–Ω—ã–π –ª–∏—Å—Ç –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
        const detailSheetName = `${CATEGORY_SHEETS.DETAIL_PREFIX}${cat.title}`;
        const detailSheet = ss.getSheetByName(detailSheetName);
        
        if (!detailSheet) {
          logWarning(`‚ö†Ô∏è –î–µ—Ç–∞–ª—å–Ω—ã–π –ª–∏—Å—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω –¥–ª—è ${cat.title}`);
          errorCount++;
          continue;
        }
        
        // –°–æ–±–∏—Ä–∞–µ–º –¥–∞–Ω–Ω—ã–µ
        const updateData = {
          seo_title: detailSheet.getRange(DETAIL_SHEET_SECTIONS.SEO_TITLE_CELL).getValue(),
          seo_description: detailSheet.getRange(DETAIL_SHEET_SECTIONS.SEO_DESCRIPTION_CELL).getValue(),
          h1_title: detailSheet.getRange(DETAIL_SHEET_SECTIONS.SEO_H1_CELL).getValue(),
          meta_keywords: detailSheet.getRange(DETAIL_SHEET_SECTIONS.SEO_KEYWORDS_CELL).getValue(),
          description: detailSheet.getRange('B17').getValue()
        };
        
        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º
        const success = updateCategoryInInSales(cat.id, updateData);
        
        if (success) {
          successCount++;
          sheet.getRange(cat.row, MAIN_LIST_COLUMNS.SEO_STATUS).setValue('‚úÖ –ì–æ—Ç–æ–≤–æ');
        } else {
          errorCount++;
          sheet.getRange(cat.row, MAIN_LIST_COLUMNS.SEO_STATUS).setValue('‚ùå –û—à–∏–±–∫–∞');
        }
        
        Utilities.sleep(500); // –ó–∞–¥–µ—Ä–∂–∫–∞ –º–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏
        
      } catch (catError) {
        logError(`‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ ${cat.title}`, catError);
        errorCount++;
      }
    }
    
    SpreadsheetApp.getActiveSpreadsheet().toast(
      `–ì–æ—Ç–æ–≤–æ! –£—Å–ø–µ—à–Ω–æ: ${successCount}, –û—à–∏–±–æ–∫: ${errorCount}`,
      '‚úÖ –ú–∞—Å—Å–æ–≤–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ',
      10
    );
    
    logInfo(`‚úÖ –ú–∞—Å—Å–æ–≤–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ: —É—Å–ø–µ—Ö ${successCount}, –æ—à–∏–±–∫–∏ ${errorCount}`, null, context);
    
  } catch (error) {
    logError('‚ùå –û—à–∏–±–∫–∞ –º–∞—Å—Å–æ–≤–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è', error, context);
    SpreadsheetApp.getUi().alert('–û—à–∏–±–∫–∞: ' + error.message);
  }
}
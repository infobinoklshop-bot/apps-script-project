/**
 * ========================================
 * –ú–û–î–£–õ–¨: –û–¢–°–õ–ï–ñ–ò–í–ê–ù–ò–ï –ü–û–ó–ò–¶–ò–ô –í –ü–û–ò–°–ö–ï
 * ========================================
 * 
 * –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª:
 * - –°–Ω—è—Ç–∏–µ –ø–æ–∑–∏—Ü–∏–π –ø–æ –º–∞—Ä–∫–µ—Ä–Ω—ã–º –∑–∞–ø—Ä–æ—Å–∞–º
 * - –ò—Å—Ç–æ—Ä–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ
 * - –°–≤—è–∑—å –∏–∑–º–µ–Ω–µ–Ω–∏–π —Å –¥–∏–Ω–∞–º–∏–∫–æ–π –ø–æ–∑–∏—Ü–∏–π
 */

/**
 * –°–æ–∑–¥–∞–µ—Ç –ª–∏—Å—Ç –∏—Å—Ç–æ—Ä–∏–∏ –ø–æ–∑–∏—Ü–∏–π
 */
function setupPositionsHistorySheet(sheet) {
  sheet.clear();
  
  const headers = [
    '–î–∞—Ç–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏',
    '–ö–∞—Ç–µ–≥–æ—Ä–∏—è ID',
    '–ö–∞—Ç–µ–≥–æ—Ä–∏—è',
    '–ú–∞—Ä–∫–µ—Ä–Ω—ã–π –∑–∞–ø—Ä–æ—Å',
    '–ü–æ–∑–∏—Ü–∏—è Yandex',
    '–ü–æ–∑–∏—Ü–∏—è Google',
    'URL –≤ –≤—ã–¥–∞—á–µ',
    '–ò–∑–º–µ–Ω–µ–Ω–∏–µ',  // +5, -3, –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π
    '–ß—Ç–æ –∏–∑–º–µ–Ω–µ–Ω–æ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ',
    '–î–∞—Ç–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã',
    '–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π',
    '–°—Ç–∞—Ç—É—Å'  // –û—Ç—Å–ª–µ–∂–∏–≤–∞–µ—Ç—Å—è, –ü—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ
  ];
  
  sheet.getRange(1, 1, 1, headers.length).setValues([headers]);
  
  const headerRange = sheet.getRange(1, 1, 1, headers.length);
  headerRange.setBackground('#ff6f00')
             .setFontColor('#ffffff')
             .setFontWeight('bold')
             .setHorizontalAlignment('center');
  
  sheet.setColumnWidth(1, 120);  // –î–∞—Ç–∞
  sheet.setColumnWidth(2, 100);  // ID
  sheet.setColumnWidth(3, 200);  // –ö–∞—Ç–µ–≥–æ—Ä–∏—è
  sheet.setColumnWidth(4, 250);  // –ó–∞–ø—Ä–æ—Å
  sheet.setColumnWidth(5, 100);  // Yandex
  sheet.setColumnWidth(6, 100);  // Google
  sheet.setColumnWidth(7, 300);  // URL
  sheet.setColumnWidth(8, 100);  // –ò–∑–º–µ–Ω–µ–Ω–∏–µ
  sheet.setColumnWidth(9, 400);  // –ß—Ç–æ –∏–∑–º–µ–Ω–µ–Ω–æ
  sheet.setColumnWidth(10, 120); // –î–∞—Ç–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è
  sheet.setColumnWidth(11, 300); // –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π
  sheet.setColumnWidth(12, 120); // –°—Ç–∞—Ç—É—Å
  
  sheet.setFrozenRows(1);
  
  logInfo('‚úÖ –õ–∏—Å—Ç –∏—Å—Ç–æ—Ä–∏–∏ –ø–æ–∑–∏—Ü–∏–π –Ω–∞—Å—Ç—Ä–æ–µ–Ω');
}

/**
 * –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç –º–∞—Ä–∫–µ—Ä–Ω—ã–π –∑–∞–ø—Ä–æ—Å –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
 */
function setupMarkerQuery() {
  try {
    const categoryData = getActiveCategoryData();
    
    if (!categoryData) {
      SpreadsheetApp.getUi().alert(
        '–û—à–∏–±–∫–∞',
        '–û—Ç–∫—Ä–æ–π—Ç–µ –¥–µ—Ç–∞–ª—å–Ω—ã–π –ª–∏—Å—Ç –∫–∞—Ç–µ–≥–æ—Ä–∏–∏',
        SpreadsheetApp.getUi().ButtonSet.OK
      );
      return;
    }
    
    const ui = SpreadsheetApp.getUi();
    
    // –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –º–∞—Ä–∫–µ—Ä–Ω—ã–π –∑–∞–ø—Ä–æ—Å
    const response = ui.prompt(
      '–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –ø–æ–∑–∏—Ü–∏–π',
      `–í–≤–µ–¥–∏—Ç–µ –º–∞—Ä–∫–µ—Ä–Ω—ã–π –∑–∞–ø—Ä–æ—Å –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ "${categoryData.title}":\n\n` +
      '–≠—Ç–æ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –û–°–ù–û–í–ù–û–ô –∑–∞–ø—Ä–æ—Å, –ø–æ –∫–æ—Ç–æ—Ä–æ–º—É –≤—ã —Ö–æ—Ç–∏—Ç–µ —Ä–∞–Ω–∂–∏—Ä–æ–≤–∞—Ç—å—Å—è.\n' +
      '–ù–∞–ø—Ä–∏–º–µ—Ä: "–∫—É–ø–∏—Ç—å –±–∏–Ω–æ–∫–ª—å 10x25"',
      ui.ButtonSet.OK_CANCEL
    );
    
    if (response.getSelectedButton() !== ui.Button.OK) {
      return;
    }
    
    const markerQuery = response.getResponseText().trim();
    
    if (!markerQuery) {
      ui.alert('–ó–∞–ø—Ä–æ—Å –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º');
      return;
    }
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫—É
    saveMarkerQueryForCategory(categoryData.id, markerQuery);
    
    // –°–Ω–∏–º–∞–µ–º –ø–µ—Ä–≤–æ–Ω–∞—á–∞–ª—å–Ω—ã–µ –ø–æ–∑–∏—Ü–∏–∏
    const confirmed = ui.alert(
      '–°–Ω—è—Ç—å —Ç–µ–∫—É—â–∏–µ –ø–æ–∑–∏—Ü–∏–∏?',
      '–°–Ω—è—Ç—å —Ç–µ–∫—É—â–∏–µ –ø–æ–∑–∏—Ü–∏–∏ –¥–ª—è —Ñ–∏–∫—Å–∞—Ü–∏–∏ –Ω–∞—á–∞–ª—å–Ω–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è?',
      ui.ButtonSet.YES_NO
    );
    
    if (confirmed === ui.Button.YES) {
      checkPositionsForCategory(categoryData, markerQuery, '–ù–∞—á–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞');
    }
    
  } catch (error) {
    logError('‚ùå –û—à–∏–±–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –º–∞—Ä–∫–µ—Ä–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞', error);
    SpreadsheetApp.getUi().alert('–û—à–∏–±–∫–∞: ' + error.message);
  }
}

/**
 * –°–æ—Ö—Ä–∞–Ω—è–µ—Ç –º–∞—Ä–∫–µ—Ä–Ω—ã–π –∑–∞–ø—Ä–æ—Å –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
 */
function saveMarkerQueryForCategory(categoryId, query) {
  const context = "–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –º–∞—Ä–∫–µ—Ä–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞";
  
  try {
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ Script Properties
    const props = PropertiesService.getScriptProperties();
    props.setProperty(`marker_query_${categoryId}`, query);
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –≤ –¥–µ—Ç–∞–ª—å–Ω–æ–º –ª–∏—Å—Ç–µ (–¥–æ–±–∞–≤–∏–º –ø–æ–ª–µ)
    const sheet = SpreadsheetApp.getActiveSheet();
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ —è—á–µ–π–∫–∞ –¥–ª—è –º–∞—Ä–∫–µ—Ä–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞
    const markerCell = sheet.getRange('B6');
    if (markerCell.getValue() === '' || sheet.getRange('A6').getValue() !== '–ú–∞—Ä–∫–µ—Ä–Ω—ã–π –∑–∞–ø—Ä–æ—Å:') {
      sheet.getRange('A6').setValue('–ú–∞—Ä–∫–µ—Ä–Ω—ã–π –∑–∞–ø—Ä–æ—Å:').setFontWeight('bold');
    }
    markerCell.setValue(query).setBackground('#fff3e0');
    
    logInfo(`‚úÖ –ú–∞—Ä–∫–µ—Ä–Ω—ã–π –∑–∞–ø—Ä–æ—Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ ${categoryId}`, null, context);
    
    SpreadsheetApp.getActiveSpreadsheet().toast(
      `–ú–∞—Ä–∫–µ—Ä–Ω—ã–π –∑–∞–ø—Ä–æ—Å "${query}" —Å–æ—Ö—Ä–∞–Ω–µ–Ω`,
      '‚úÖ –ì–æ—Ç–æ–≤–æ',
      3
    );
    
  } catch (error) {
    logError('‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –º–∞—Ä–∫–µ—Ä–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞', error, context);
    throw error;
  }
}

/**
 * –ü–æ–ª—É—á–∞–µ—Ç –º–∞—Ä–∫–µ—Ä–Ω—ã–π –∑–∞–ø—Ä–æ—Å –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
 */
function getMarkerQueryForCategory(categoryId) {
  try {
    const props = PropertiesService.getScriptProperties();
    return props.getProperty(`marker_query_${categoryId}`) || null;
  } catch (error) {
    logError('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –º–∞—Ä–∫–µ—Ä–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞', error);
    return null;
  }
}

/**
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –ø–æ–∑–∏—Ü–∏–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –≤ –ø–æ–∏—Å–∫–µ
 */
function checkPositionsForCategory(categoryData, markerQuery, comment = '') {
  const context = `–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–∑–∏—Ü–∏–π –¥–ª—è ${categoryData.title}`;
  
  try {
    logInfo('üîç –ù–∞—á–∏–Ω–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É –ø–æ–∑–∏—Ü–∏–π', null, context);
    
    SpreadsheetApp.getActiveSpreadsheet().toast(
      `–ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–∑–∏—Ü–∏–∏ –ø–æ –∑–∞–ø—Ä–æ—Å—É "${markerQuery}"...`,
      '‚è≥ –ü—Ä–æ–≤–µ—Ä–∫–∞',
      -1
    );
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–∑–∏—Ü–∏–∏ –≤ –Ø–Ω–¥–µ–∫—Å –∏ Google
    const yandexPosition = checkPositionInYandex(markerQuery, categoryData.url);
    const googlePosition = checkPositionInGoogle(markerQuery, categoryData.url);
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    savePositionCheck(categoryData, markerQuery, yandexPosition, googlePosition, comment);
    
    SpreadsheetApp.getActiveSpreadsheet().toast(
      `–ü–æ–∑–∏—Ü–∏–∏: –Ø–Ω–¥–µ–∫—Å ${yandexPosition || '–Ω–µ—Ç'}, Google ${googlePosition || '–Ω–µ—Ç'}`,
      '‚úÖ –ì–æ—Ç–æ–≤–æ',
      8
    );
    
    logInfo(`‚úÖ –ü–æ–∑–∏—Ü–∏–∏ –ø—Ä–æ–≤–µ—Ä–µ–Ω—ã: Y:${yandexPosition}, G:${googlePosition}`, null, context);
    
    return {
      yandex: yandexPosition,
      google: googlePosition
    };
    
  } catch (error) {
    logError('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–∑–∏—Ü–∏–π', error, context);
    SpreadsheetApp.getActiveSpreadsheet().toast(
      '–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–∑–∏—Ü–∏–π: ' + error.message,
      '‚ùå –û—à–∏–±–∫–∞',
      10
    );
    throw error;
  }
}

/**
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –ø–æ–∑–∏—Ü–∏—é –≤ –Ø–Ω–¥–µ–∫—Å–µ
 * –í–ê–ñ–ù–û: –î–ª—è —Ä–µ–∞–ª—å–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω—É–∂–µ–Ω API –Ø–Ω–¥–µ–∫—Å.XML –∏–ª–∏ —Å–µ—Ä–≤–∏—Å –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–∑–∏—Ü–∏–π
 */
function checkPositionInYandex(query, targetUrl) {
  const context = "–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ø–Ω–¥–µ–∫—Å";
  
  try {
    // –í–ê–†–ò–ê–ù–¢ 1: –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å API –Ø–Ω–¥–µ–∫—Å.XML (–ø–ª–∞—Ç–Ω—ã–π)
    // –í–ê–†–ò–ê–ù–¢ 2: –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å–µ—Ä–≤–∏—Å –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–∑–∏—Ü–∏–π (Serpstat, SE Ranking)
    // –í–ê–†–ò–ê–ù–¢ 3: –†—É—á–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —á–µ—Ä–µ–∑ —Ñ–æ—Ä–º—É
    
    // –ü—Ä–∏–º–µ—Ä –∑–∞–≥–ª—É—à–∫–∏ - –∑–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π API
    logWarning('‚ö†Ô∏è –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–∑–∏—Ü–∏–π –Ø–Ω–¥–µ–∫—Å –Ω–µ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–∞ - –¥–æ–±–∞–≤—å—Ç–µ API');
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–∏–∞–ª–æ–≥ –¥–ª—è —Ä—É—á–Ω–æ–≥–æ –≤–≤–æ–¥–∞
    const ui = SpreadsheetApp.getUi();
    const response = ui.prompt(
      '–†—É—á–Ω–æ–π –≤–≤–æ–¥ –ø–æ–∑–∏—Ü–∏–∏ –Ø–Ω–¥–µ–∫—Å',
      `–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–∑–∏—Ü–∏—é –≤—Ä—É—á–Ω—É—é –≤ –Ø–Ω–¥–µ–∫—Å–µ:\n\n–ó–∞–ø—Ä–æ—Å: "${query}"\nURL: ${targetUrl}\n\n–í–≤–µ–¥–∏—Ç–µ –ø–æ–∑–∏—Ü–∏—é (–∏–ª–∏ 0 –µ—Å–ª–∏ –Ω–µ—Ç –≤ –¢–û–ü-100):`,
      ui.ButtonSet.OK_CANCEL
    );
    
    if (response.getSelectedButton() === ui.Button.OK) {
      const position = parseInt(response.getResponseText());
      return isNaN(position) ? null : (position === 0 ? null : position);
    }
    
    return null;
    
  } catch (error) {
    logError('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ø–Ω–¥–µ–∫—Å', error, context);
    return null;
  }
}

/**
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –ø–æ–∑–∏—Ü–∏—é –≤ Google
 * –í–ê–ñ–ù–û: Google –Ω–µ –ª—é–±–∏—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –∑–∞–ø—Ä–æ—Å—ã, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ API
 */
function checkPositionInGoogle(query, targetUrl) {
  const context = "–ü—Ä–æ–≤–µ—Ä–∫–∞ Google";
  
  try {
    // –ê–Ω–∞–ª–æ–≥–∏—á–Ω–æ –Ø–Ω–¥–µ–∫—Å—É - –Ω—É–∂–µ–Ω API –∏–ª–∏ —Å–µ—Ä–≤–∏—Å
    logWarning('‚ö†Ô∏è –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–∑–∏—Ü–∏–π Google –Ω–µ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–∞ - –¥–æ–±–∞–≤—å—Ç–µ API');
    
    const ui = SpreadsheetApp.getUi();
    const response = ui.prompt(
      '–†—É—á–Ω–æ–π –≤–≤–æ–¥ –ø–æ–∑–∏—Ü–∏–∏ Google',
      `–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–∑–∏—Ü–∏—é –≤—Ä—É—á–Ω—É—é –≤ Google:\n\n–ó–∞–ø—Ä–æ—Å: "${query}"\nURL: ${targetUrl}\n\n–í–≤–µ–¥–∏—Ç–µ –ø–æ–∑–∏—Ü–∏—é (–∏–ª–∏ 0 –µ—Å–ª–∏ –Ω–µ—Ç –≤ –¢–û–ü-100):`,
      ui.ButtonSet.OK_CANCEL
    );
    
    if (response.getSelectedButton() === ui.Button.OK) {
      const position = parseInt(response.getResponseText());
      return isNaN(position) ? null : (position === 0 ? null : position);
    }
    
    return null;
    
  } catch (error) {
    logError('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ Google', error, context);
    return null;
  }
}

/**
 * –°–æ—Ö—Ä–∞–Ω—è–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–∑–∏—Ü–∏–π
 */
function savePositionCheck(categoryData, query, yandexPos, googlePos, comment) {
  const context = "–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–∑–∏—Ü–∏–π";
  
  try {
    const ss = SpreadsheetApp.getActiveSpreadsheet();
    let sheet = ss.getSheetByName(CATEGORY_SHEETS.POSITIONS_HISTORY);
    
    if (!sheet) {
      sheet = ss.insertSheet(CATEGORY_SHEETS.POSITIONS_HISTORY);
      setupPositionsHistorySheet(sheet);
    }
    
    // –ü–æ–ª—É—á–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â—É—é –ø—Ä–æ–≤–µ—Ä–∫—É –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–π
    const previousCheck = getLastPositionCheck(categoryData.id, query);
    
    // –í—ã—á–∏—Å–ª—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏–µ
    let yandexChange = '';
    let googleChange = '';
    
    if (previousCheck) {
      if (previousCheck.yandex && yandexPos) {
        const diff = previousCheck.yandex - yandexPos;
        yandexChange = diff > 0 ? `+${diff}` : (diff < 0 ? `${diff}` : '=');
      }
      
      if (previousCheck.google && googlePos) {
        const diff = previousCheck.google - googlePos;
        googleChange = diff > 0 ? `+${diff}` : (diff < 0 ? `${diff}` : '=');
      }
    }
    
    const change = [yandexChange, googleChange].filter(Boolean).join(' | ') || '–ü–µ—Ä–≤–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞';
    
    // –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –∏–∑–º–µ–Ω–µ–Ω–∏—è—Ö –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ
    const pageChanges = getRecentPageChanges(categoryData.id);
    const lastChangeDate = pageChanges.length > 0 ? pageChanges[0].date : '';
    const changesText = pageChanges.length > 0 ? 
      pageChanges.slice(0, 3).map(ch => `${ch.date}: ${ch.description}`).join('\n') : 
      '–ù–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏–π';
    
    // –ù–æ–≤–∞—è —Å—Ç—Ä–æ–∫–∞ –¥–∞–Ω–Ω—ã—Ö
    const newRow = [
      new Date(),                    // –î–∞—Ç–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏
      categoryData.id,               // ID –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
      categoryData.title,            // –ù–∞–∑–≤–∞–Ω–∏–µ
      query,                         // –ú–∞—Ä–∫–µ—Ä–Ω—ã–π –∑–∞–ø—Ä–æ—Å
      yandexPos || '–ù–µ—Ç –≤ –¢–û–ü-100', // –ü–æ–∑–∏—Ü–∏—è –Ø–Ω–¥–µ–∫—Å
      googlePos || '–ù–µ—Ç –≤ –¢–û–ü-100', // –ü–æ–∑–∏—Ü–∏—è Google
      categoryData.url,              // URL
      change,                        // –ò–∑–º–µ–Ω–µ–Ω–∏–µ
      changesText,                   // –ß—Ç–æ –∏–∑–º–µ–Ω–µ–Ω–æ
      lastChangeDate,                // –î–∞—Ç–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è
      comment || '',                 // –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π
      '–û—Ç—Å–ª–µ–∂–∏–≤–∞–µ—Ç—Å—è'               // –°—Ç–∞—Ç—É—Å
    ];
    
    // –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç—Ä–æ–∫—É
    const lastRow = sheet.getLastRow();
    sheet.getRange(lastRow + 1, 1, 1, newRow.length).setValues([newRow]);
    
    // –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
    sheet.getRange(lastRow + 1, 1).setNumberFormat('dd.mm.yyyy hh:mm');
    sheet.getRange(lastRow + 1, 10).setNumberFormat('dd.mm.yyyy hh:mm');
    
    // –¶–≤–µ—Ç–æ–≤–æ–µ –∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π
    const changeCell = sheet.getRange(lastRow + 1, 8);
    if (change.includes('+')) {
      changeCell.setBackground('#c8e6c9'); // –ó–µ–ª–µ–Ω—ã–π - —Ä–æ—Å—Ç
    } else if (change.includes('-')) {
      changeCell.setBackground('#ffcdd2'); // –ö—Ä–∞—Å–Ω—ã–π - –ø–∞–¥–µ–Ω–∏–µ
    } else if (change === '=') {
      changeCell.setBackground('#fff9c4'); // –ñ–µ–ª—Ç—ã–π - –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π
    }
    
    logInfo('‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–∑–∏—Ü–∏–π —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞', null, context);
    
  } catch (error) {
    logError('‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏', error, context);
    throw error;
  }
}

/**
 * –ü–æ–ª—É—á–∞–µ—Ç –ø–æ—Å–ª–µ–¥–Ω—é—é –ø—Ä–æ–≤–µ—Ä–∫—É –ø–æ–∑–∏—Ü–∏–π
 */
function getLastPositionCheck(categoryId, query) {
  try {
    const ss = SpreadsheetApp.getActiveSpreadsheet();
    const sheet = ss.getSheetByName(CATEGORY_SHEETS.POSITIONS_HISTORY);
    
    if (!sheet) {
      return null;
    }
    
    const data = sheet.getDataRange().getValues();
    
    // –ò—â–µ–º –ø–æ—Å–ª–µ–¥–Ω—é—é –ø—Ä–æ–≤–µ—Ä–∫—É –¥–ª—è —ç—Ç–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏ –∑–∞–ø—Ä–æ—Å–∞
    for (let i = data.length - 1; i >= 1; i--) {
      if (data[i][1] == categoryId && data[i][3] === query) {
        return {
          date: data[i][0],
          yandex: typeof data[i][4] === 'number' ? data[i][4] : null,
          google: typeof data[i][5] === 'number' ? data[i][5] : null
        };
      }
    }
    
    return null;
    
  } catch (error) {
    logError('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ—Å–ª–µ–¥–Ω–µ–π –ø—Ä–æ–≤–µ—Ä–∫–∏', error);
    return null;
  }
}

/**
 * –§–∏–∫—Å–∏—Ä—É–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏–µ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
 */
function logPageChange(categoryId, changeDescription) {
  const context = "–§–∏–∫—Å–∞—Ü–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã";
  
  try {
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π
    const props = PropertiesService.getScriptProperties();
    const changesKey = `page_changes_${categoryId}`;
    
    let changes = [];
    const existingChanges = props.getProperty(changesKey);
    
    if (existingChanges) {
      try {
        changes = JSON.parse(existingChanges);
      } catch (e) {
        changes = [];
      }
    }
    
    // –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ –∏–∑–º–µ–Ω–µ–Ω–∏–µ
    changes.unshift({
      date: new Date().toISOString(),
      description: changeDescription,
      timestamp: Date.now()
    });
    
    // –•—Ä–∞–Ω–∏–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ 50 –∏–∑–º–µ–Ω–µ–Ω–∏–π
    if (changes.length > 50) {
      changes = changes.slice(0, 50);
    }
    
    props.setProperty(changesKey, JSON.stringify(changes));
    
    logInfo(`‚úÖ –ò–∑–º–µ–Ω–µ–Ω–∏–µ –∑–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–æ –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ ${categoryId}`, null, context);
    
    // –¢–∞–∫–∂–µ –¥–æ–±–∞–≤–ª—è–µ–º –∑–∞–ø–∏—Å—å –≤ –¥–µ—Ç–∞–ª—å–Ω—ã–π –ª–∏—Å—Ç
    addChangeLogToDetailSheet(changeDescription);
    
  } catch (error) {
    logError('‚ùå –û—à–∏–±–∫–∞ —Ñ–∏–∫—Å–∞—Ü–∏–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è', error, context);
  }
}

/**
 * –ü–æ–ª—É—á–∞–µ—Ç –Ω–µ–¥–∞–≤–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã
 */
function getRecentPageChanges(categoryId, limit = 10) {
  try {
    const props = PropertiesService.getScriptProperties();
    const changesKey = `page_changes_${categoryId}`;
    const changesData = props.getProperty(changesKey);
    
    if (!changesData) {
      return [];
    }
    
    const changes = JSON.parse(changesData);
    
    return changes.slice(0, limit).map(ch => ({
      date: new Date(ch.timestamp).toLocaleDateString('ru-RU'),
      description: ch.description,
      timestamp: ch.timestamp
    }));
    
  } catch (error) {
    logError('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∏—Å—Ç–æ—Ä–∏–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–π', error);
    return [];
  }
}

/**
 * –î–æ–±–∞–≤–ª—è–µ—Ç –∑–∞–ø–∏—Å—å –≤ –ª–æ–≥ –∏–∑–º–µ–Ω–µ–Ω–∏–π –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ –ª–∏—Å—Ç–∞
 */
function addChangeLogToDetailSheet(changeDescription) {
  try {
    const sheet = SpreadsheetApp.getActiveSheet();
    const sheetName = sheet.getName();
    
    if (!sheetName.startsWith(CATEGORY_SHEETS.DETAIL_PREFIX)) {
      return; // –ù–µ –¥–µ—Ç–∞–ª—å–Ω—ã–π –ª–∏—Å—Ç
    }
    
    // –ò—â–µ–º —Å–µ–∫—Ü–∏—é –ª–æ–≥–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–π (—Å–æ–∑–¥–∞–µ–º –µ—Å–ª–∏ –Ω–µ—Ç)
    const changeLogStart = 400; // –°—Ç—Ä–æ–∫–∞ –Ω–∞—á–∞–ª–∞ –ª–æ–≥–∞
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –∑–∞–≥–æ–ª–æ–≤–æ–∫
    const headerCell = sheet.getRange(changeLogStart, 1);
    if (headerCell.getValue() !== 'üìù –ò–°–¢–û–†–ò–Ø –ò–ó–ú–ï–ù–ï–ù–ò–ô') {
      // –°–æ–∑–¥–∞–µ–º —Å–µ–∫—Ü–∏—é
      headerCell.setValue('üìù –ò–°–¢–û–†–ò–Ø –ò–ó–ú–ï–ù–ï–ù–ò–ô')
                .setFontWeight('bold')
                .setFontSize(14)
                .setBackground('#607d8b')
                .setFontColor('#ffffff');
      sheet.getRange(changeLogStart, 1, 1, 6).merge();
      
      // –ó–∞–≥–æ–ª–æ–≤–∫–∏ —Ç–∞–±–ª–∏—Ü—ã
      const logHeaders = ['–î–∞—Ç–∞', '–í—Ä–µ–º—è', '–û–ø–∏—Å–∞–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è', '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å'];
      sheet.getRange(changeLogStart + 1, 1, 1, logHeaders.length).setValues([logHeaders]);
      sheet.getRange(changeLogStart + 1, 1, 1, logHeaders.length)
           .setFontWeight('bold')
           .setBackground('#cfd8dc');
    }
    
    // –ù–∞—Ö–æ–¥–∏–º –ø–µ—Ä–≤—É—é –ø—É—Å—Ç—É—é —Å—Ç—Ä–æ–∫—É –≤ –ª–æ–≥–µ
    let logRow = changeLogStart + 2;
    while (sheet.getRange(logRow, 1).getValue() !== '') {
      logRow++;
    }
    
    // –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–ø–∏—Å—å
    const now = new Date();
    const user = Session.getActiveUser().getEmail();
    
    sheet.getRange(logRow, 1, 1, 4).setValues([[
      now.toLocaleDateString('ru-RU'),
      now.toLocaleTimeString('ru-RU'),
      changeDescription,
      user
    ]]);
    
    // –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
    sheet.getRange(logRow, 3).setWrap(true);
    sheet.getRange(logRow, 1, 1, 4).setBackground('#f5f5f5');
    
  } catch (error) {
    logError('‚ùå –û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ –ª–æ–≥ –∏–∑–º–µ–Ω–µ–Ω–∏–π', error);
  }
}

/**
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –ø–æ–∑–∏—Ü–∏–∏ –¥–ª—è –∞–∫—Ç–∏–≤–Ω–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
 */
function checkPositionsForActiveCategory() {
  try {
    const categoryData = getActiveCategoryData();
    
    if (!categoryData) {
      SpreadsheetApp.getUi().alert(
        '–û—à–∏–±–∫–∞',
        '–û—Ç–∫—Ä–æ–π—Ç–µ –¥–µ—Ç–∞–ª—å–Ω—ã–π –ª–∏—Å—Ç –∫–∞—Ç–µ–≥–æ—Ä–∏–∏',
        SpreadsheetApp.getUi().ButtonSet.OK
      );
      return;
    }
    
    const markerQuery = getMarkerQueryForCategory(categoryData.id);
    
    if (!markerQuery) {
      const ui = SpreadsheetApp.getUi();
      const response = ui.alert(
        '–ú–∞—Ä–∫–µ—Ä–Ω—ã–π –∑–∞–ø—Ä–æ—Å –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω',
        '–°–Ω–∞—á–∞–ª–∞ –Ω–∞—Å—Ç—Ä–æ–π—Ç–µ –º–∞—Ä–∫–µ—Ä–Ω—ã–π –∑–∞–ø—Ä–æ—Å –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –ø–æ–∑–∏—Ü–∏–π.',
        ui.ButtonSet.OK_CANCEL
      );
      
      if (response === ui.Button.OK) {
        setupMarkerQuery();
      }
      return;
    }
    
    // –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π
    const ui = SpreadsheetApp.getUi();
    const commentResponse = ui.prompt(
      '–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∫ –ø—Ä–æ–≤–µ—Ä–∫–µ',
      '–î–æ–±–∞–≤—å—Ç–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ):',
      ui.ButtonSet.OK_CANCEL
    );
    
    const comment = commentResponse.getSelectedButton() === ui.Button.OK ? 
      commentResponse.getResponseText() : '';
    
    checkPositionsForCategory(categoryData, markerQuery, comment);
    
  } catch (error) {
    logError('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–∑–∏—Ü–∏–π', error);
    SpreadsheetApp.getUi().alert('–û—à–∏–±–∫–∞: ' + error.message);
  }
}

/**
 * –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –æ—Ç—á–µ—Ç –ø–æ –¥–∏–Ω–∞–º–∏–∫–µ –ø–æ–∑–∏—Ü–∏–π
 */
function showPositionsDynamicsReport() {
  try {
    const categoryData = getActiveCategoryData();
    
    if (!categoryData) {
      SpreadsheetApp.getUi().alert(
        '–û—à–∏–±–∫–∞',
        '–û—Ç–∫—Ä–æ–π—Ç–µ –¥–µ—Ç–∞–ª—å–Ω—ã–π –ª–∏—Å—Ç –∫–∞—Ç–µ–≥–æ—Ä–∏–∏',
        SpreadsheetApp.getUi().ButtonSet.OK
      );
      return;
    }
    
    const ss = SpreadsheetApp.getActiveSpreadsheet();
    const sheet = ss.getSheetByName(CATEGORY_SHEETS.POSITIONS_HISTORY);
    
    if (!sheet) {
      SpreadsheetApp.getUi().alert(
        '–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö',
        '–ò—Å—Ç–æ—Ä–∏—è –ø—Ä–æ–≤–µ—Ä–æ–∫ –ø–æ–∑–∏—Ü–∏–π –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç',
        SpreadsheetApp.getUi().ButtonSet.OK
      );
      return;
    }
    
    // –°–æ–±–∏—Ä–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    const data = sheet.getDataRange().getValues();
    const categoryChecks = [];
    
    for (let i = 1; i < data.length; i++) {
      if (data[i][1] == categoryData.id) {
        categoryChecks.push({
          date: data[i][0],
          query: data[i][3],
          yandex: data[i][4],
          google: data[i][5],
          change: data[i][7],
          pageChanges: data[i][8]
        });
      }
    }
    
    if (categoryChecks.length === 0) {
      SpreadsheetApp.getUi().alert(
        '–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö',
        '–ü—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–∑–∏—Ü–∏–π –¥–ª—è —ç—Ç–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –Ω–µ –ø—Ä–æ–≤–æ–¥–∏–ª–∏—Å—å',
        SpreadsheetApp.getUi().ButtonSet.OK
      );
      return;
    }
    
    // –§–æ—Ä–º–∏—Ä—É–µ–º –æ—Ç—á–µ—Ç
    let report = `üìä –û–¢–ß–ï–¢ –ü–û –î–ò–ù–ê–ú–ò–ö–ï –ü–û–ó–ò–¶–ò–ô\n\n–ö–∞—Ç–µ–≥–æ—Ä–∏—è: ${categoryData.title}\n`;
    report += `–ü—Ä–æ–≤–µ—Ä–æ–∫: ${categoryChecks.length}\n\n`;
    
    report += `–ü–û–°–õ–ï–î–ù–ò–ï 5 –ü–†–û–í–ï–†–û–ö:\n\n`;
    
    categoryChecks.slice(0, 5).forEach((check, index) => {
      const date = new Date(check.date).toLocaleDateString('ru-RU');
      report += `${index + 1}. ${date} - –ó–∞–ø—Ä–æ—Å: "${check.query}"\n`;
      report += `   –Ø–Ω–¥–µ–∫—Å: ${check.yandex} | Google: ${check.google}\n`;
      report += `   –ò–∑–º–µ–Ω–µ–Ω–∏–µ: ${check.change}\n`;
      if (check.pageChanges) {
        report += `   –ò–∑–º–µ–Ω–µ–Ω–∏—è –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ: ${check.pageChanges.split('\n')[0]}\n`;
      }
      report += `\n`;
    });
    
    // –ê–Ω–∞–ª–∏–∑ —Ç—Ä–µ–Ω–¥–∞
    if (categoryChecks.length >= 3) {
      report += `\n–ê–ù–ê–õ–ò–ó –¢–†–ï–ù–î–ê (–ø–æ—Å–ª–µ–¥–Ω–∏–µ 3 –ø—Ä–æ–≤–µ—Ä–∫–∏):\n`;
      
      const last3 = categoryChecks.slice(0, 3);
      const yandexTrend = analyzeTrend(last3.map(c => 
        typeof c.yandex === 'number' ? c.yandex : null
      ));
      const googleTrend = analyzeTrend(last3.map(c => 
        typeof c.google === 'number' ? c.google : null
      ));
      
      report += `–Ø–Ω–¥–µ–∫—Å: ${yandexTrend}\n`;
      report += `Google: ${googleTrend}\n`;
    }
    
    SpreadsheetApp.getUi().alert('–î–∏–Ω–∞–º–∏–∫–∞ –ø–æ–∑–∏—Ü–∏–π', report, SpreadsheetApp.getUi().ButtonSet.OK);
    
  } catch (error) {
    logError('‚ùå –û—à–∏–±–∫–∞ –ø–æ–∫–∞–∑–∞ –æ—Ç—á–µ—Ç–∞', error);
    SpreadsheetApp.getUi().alert('–û—à–∏–±–∫–∞: ' + error.message);
  }
}

/**
 * –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç —Ç—Ä–µ–Ω–¥ –ø–æ–∑–∏—Ü–∏–π
 */
function analyzeTrend(positions) {
  const validPositions = positions.filter(p => p !== null);
  
  if (validPositions.length < 2) {
    return '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–∞–Ω–Ω—ã—Ö';
  }
  
  const first = validPositions[validPositions.length - 1];
  const last = validPositions[0];
  const diff = first - last;
  
  if (diff > 3) {
    return `üìà –†–æ—Å—Ç (+${diff} –ø–æ–∑–∏—Ü–∏–π)`;
  } else if (diff < -3) {
    return `üìâ –ü–∞–¥–µ–Ω–∏–µ (${diff} –ø–æ–∑–∏—Ü–∏–π)`;
  } else if (diff !== 0) {
    return `‚û°Ô∏è –ù–µ–±–æ–ª—å—à–æ–µ –∏–∑–º–µ–Ω–µ–Ω–∏–µ (${diff > 0 ? '+' : ''}${diff})`;
  } else {
    return `‚è∏Ô∏è –°—Ç–∞–±–∏–ª—å–Ω–æ`;
  }
}

/**
 * –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —Ñ–∏–∫—Å–∞—Ü–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –≤ InSales
 * –í—ã–∑—ã–≤–∞–µ—Ç—Å—è –∏–∑ sendCategoryChangesToInSales() –≤ –º–æ–¥—É–ª–µ 19
 */
function autoLogChangeBeforeSending(categoryData, updateData) {
  try {
    const changes = [];
    
    if (updateData.seo_title) changes.push(`SEO Title: "${updateData.seo_title}"`);
    if (updateData.seo_description) changes.push(`Meta Description: "${updateData.seo_description.substring(0, 50)}..."`);
    if (updateData.h1_title) changes.push(`H1: "${updateData.h1_title}"`);
    if (updateData.description) changes.push('–û–±–Ω–æ–≤–ª–µ–Ω–æ –æ–ø–∏—Å–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏');
    
    if (changes.length > 0) {
      const changeLog = `–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ AI: ${changes.join('; ')}`;
      logPageChange(categoryData.id, changeLog);
      
      logInfo(`‚úÖ –ò–∑–º–µ–Ω–µ–Ω–∏—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω—ã: ${changes.length} —ç–ª–µ–º–µ–Ω—Ç–æ–≤`);
    }
    
  } catch (error) {
    logError('‚ùå –û—à–∏–±–∫–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π —Ñ–∏–∫—Å–∞—Ü–∏–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–π', error);
  }
}